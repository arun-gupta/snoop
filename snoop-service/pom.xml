<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
   <modelVersion>4.0.0</modelVersion>
   <groupId>eu.agilejava</groupId>
   <artifactId>snoop-service</artifactId>
   <version>1.1.0-SNAPSHOT</version>
   <packaging>war</packaging>

   <name>Snoop Service</name>
   <description>Snoop - A Discovery Service for Java EE.</description>

   <parent>
      <groupId>eu.agilejava</groupId>
      <artifactId>snoop-root</artifactId>
      <version>1.1.0-SNAPSHOT</version>
   </parent>

   <dependencies>

      <!-- Needed until Java EE 8 -->
      <dependency>
         <groupId>javax.mvc</groupId>
         <artifactId>javax.mvc-api</artifactId>
         <version>1.0-edr1</version>
      </dependency>
      <dependency>
         <groupId>com.oracle.ozark</groupId>
         <artifactId>ozark</artifactId>
         <version>1.0.0-m01</version>
         <scope>runtime</scope>
      </dependency>  
   </dependencies>   

   <profiles>
      <profile>
         <id>docker</id>
         <build>
            <plugins>
               <plugin>
                  <groupId>org.jolokia</groupId>
                  <artifactId>docker-maven-plugin</artifactId>
                  <version>0.11.5</version>
                  <configuration>
                     <images>
                        <image>
                           <alias>user</alias>
                           <name>ivargrimstad/snoop-service:glassfish</name>
                           <build>
                              <from>library/glassfish:4.1-jdk8</from>
                              <assembly>
                                 <descriptor>assembly.xml</descriptor>
                                 <basedir>/</basedir>
                              </assembly>
                              <ports>
                                 <port>8080</port>
                              </ports>
                           </build>
                                    
                           <run>
                              <ports>
                                 <port>8081:8080</port>
                              </ports>
                           </run>
                        </image>
                     </images>
                  </configuration>
                        
                  <executions>
                     <execution>
                        <id>docker:build</id>
                        <phase>package</phase>
                        <goals>
                           <goal>build</goal>
                        </goals>
                     </execution>
                     <!--                     <execution>-->
                     <!--                        <id>docker:start</id>-->
                     <!--                        <phase>install</phase>-->
                     <!--                        <goals>-->
                     <!--                           <goal>start</goal>-->
                     <!--                        </goals>-->
                     <!--                     </execution>-->
                  </executions>
               </plugin>
            </plugins>
         </build>
      </profile>
   </profiles>

</project>
